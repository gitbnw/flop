# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/
<%
imgs = {}
Dir.chdir("#{Rails.root}/app/assets/images/") do
  imgs = Dir["**"].inject({}) {|h,f| h.merge! f => image_path(f)}
end
%>

window.image_path = (name) ->
  <%= imgs.to_json %>[name]

$(document).on "page:change", ->
  user_id = $('#user').data("user").id

  saveCurrentLocation = (user_position) ->
    position = user_position.coords.latitude + ", " +
    user_position.coords.longitude
    user_update_url = "../api/v1/users/" + user_id
    google_locate_url = '../home/address'
    $.ajax
      url: user_update_url
      type: 'PUT',
      data: {"user": {"position": position}}, #denest position
      error: (jqXHR, textStatus, errorThrown) ->
        console.log "AJAX Error: #{errorThrown}"
      success: (data, textStatus, jqXHR) ->
        location = {}
        $('#search_position').val(position)
        $.ajax
          url: google_locate_url
          type: 'PUT',
          data: {"id": user_id},
          error: (jqXHR, textStatus, errorThrown) ->
            console.log "AJAX Error: #{errorThrown}"
          success: (data, textStatus, jqXHR) ->
            $('#search_address').val(data.formatted_address)
            $( "#address-search" ).trigger("submit")

  getLocation = ->
    if navigator.geolocation
      navigator.geolocation.getCurrentPosition saveCurrentLocation
    else
      x.innerHTML = 'Geolocation is not supported by this browser.'
    return

   $('#geo-link').click (event) ->
     getLocation()
     event.preventDefault()
    # Prevent link from following its href
     return

@initMap = (init_map_parameters)->
  position = init_map_parameters["search_position"].split(",")
  myLatLng = 
    lat: parseFloat position[0]
    lng: parseFloat position[1]
  map = new (google.maps.Map)(document.getElementById('map'),
    zoom: 13
    center: myLatLng)
  marker = new (google.maps.Marker)(
    position: myLatLng
    map: map
    icon: image_path('icon-109572_32.jpg')
    title: 'You!')
  createMarker(location, map) for location in init_map_parameters["locations_array"]  
  return
  
createMarker = (location, map) ->
  console.log location
  LatLng =
    lat: location["latitude"]
    lng: location["longitude"]
  marker = new (google.maps.Marker)(
    position: LatLng
    map:map
    icon: location["icon"]
    title: location["name"])
  return